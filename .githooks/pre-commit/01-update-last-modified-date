#!/usr/bin/env bash

# Replace `last_modified_date` timestamp with current time
# This script is used to update the `last_modified_date` timestamp
# in the frontmatter of staged Markdown files.

# Get the list of staged Markdown files
staged_files=$(git diff --cached --name-only --diff-filter=ACM | grep '\.md$')

# Loop through each staged Markdown file
echo "$staged_files" | while read file; do
    # Check if the file exists and contains a frontmatter block
    if [[ -f "$file" ]] && grep -q "^---" "$file"; then
        echo "Updating last_modified_date in $file"
        # Get the last modified timestamp of the file
        last_modified_timestamp=$(stat -c %Y "$file")

        # Convert the last modified timestamp to UTC datetime in YYYY-MM-DD HH:MM:SS format
        last_modified_datetime_utc=$(date -u -d @"$last_modified_timestamp" "+%Y-%m-%d %H:%M:%S")

        # Check if last_modified_date exists in the frontmatter, update it if it does
        if grep -q "^last_modified_date:" "$file"; then
            sed -i "/^last_modified_date:/c\last_modified_date: $last_modified_datetime_utc" "$file"
        else
            # If last_modified_date does not exist, add it after the first frontmatter delimiter
            sed -i "/^---/a last_modified_date: $last_modified_datetime_utc" "$file"
        fi

        # Stage the updated file
        git add "$file"
    fi
done
